# yaml-language-server: $schema=https://raw.githubusercontent.com/jesseduffield/lazygit/master/schema/config.json
git:
  paging:
    colorArg: always
    pager: diff-highlight
customCommands:
  - key: "C"
    command: 'git commit -m "{{ .Form.Type }}{{if .Form.Scopes}}({{ .Form.Scopes }}){{end}}{{if eq .Form.Breaking `yes`}}!{{end}}: {{ .Form.Description }}"'
    description: "conventional commit"
    context: "files"
    prompts:
      - type: "menu"
        title: "Type of change you are committing"
        key: "Type"
        options:
          - value: "feat"
            description: "A new feature"
          - value: "fix"
            description: "A bug fix"
          - value: "docs"
            description: "Documentation only changes"
          - value: "style"
            description: "Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)"
          - value: "refactor"
            description: "A code change that neither fixes a bug nor adds a feature"
          - value: "perf"
            description: "A code change that improves performance"
          - value: "test"
            description: "Adding missing tests or correcting existing tests"
          - value: "build"
            description: "Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)"
          - value: "ci"
            description: "Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)"
          - value: "chore"
            description: "Other changes that don't modify src or test files"
          - value: "revert"
            description: "Reverts a previous commit"
      - type: "input"
        title: "Scope(s) of this change"
        key: "Scopes"
      - type: "input"
        title: "Short description of the change"
        key: "Description"
      - type: "menu"
        title: "Is this a breaking change?"
        key: "Breaking"
        options:
          - value: "no"
            description: "This change does not introduce a breaking change"
          - value: "yes"
            description: "This change introduces a breaking change"
      - type: "confirm"
        title: "Is the commit message correct?"
        body: "{{ .Form.Type }}{{if .Form.Scopes}}({{ .Form.Scopes }}){{end}}{{if eq .Form.Breaking `yes`}}!{{end}}: {{ .Form.Description }}"
